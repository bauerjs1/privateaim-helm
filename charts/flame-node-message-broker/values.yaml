## Global variables
global:
  hub:
    endpoints:
      ## @param global.hub.endpoints.auth Hub Auth API endpoint. Overrides broker.HUB_AUTH_BASE_URL if provided
      auth: https://auth.privateaim.dev
      ## @param global.hub.endpoints.core Hub Core API endpoint. Overrides broker.HUB_BASE_URL if provided
      core: https://core.privateaim.dev
    auth:
      ## TODO: does this need to be set? if not, remove it, otherwise, set it to the correct value
      ## @param global.hub.auth.realmId Realm ID. Overrides broker.HUB_AUTH_REALM_ID
      # realmId: ""
      ## @param global.hub.auth.robotUser Robot user ID. Overrides broker.HUB_AUTH_ROBOT_ID if provided
      robotUser: ""
      ## @param global.hub.auth.robotSecret Robot secret. Overrides broker.HUB_AUTH_ROBOT_SECRET if provided
      robotSecret: ""

common:
  timezone: Europe/Berlin
broker:
  AUTH_JWKS_URL: ""
  HUB_BASE_URL: https://api.privateaim.net/
  HUB_AUTH_BASE_URL: https://auth.privateaim.net/
  HUB_AUTH_ROBOT_ID: ""
  HUB_AUTH_ROBOT_SECRET: ""

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/privateaim/node-message-broker
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""
  # This sets the pull policy for images.
  pullPolicy: Always

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  privileged: false
  allowPrivilegeEscalation: false
  capabilities:
    drop: [ALL]

resources:
  requests:
    memory: 256Mi
    cpu: 100m
  limits:
    memory: 512Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 90
  periodSeconds: 10
  timeoutSeconds: 10
readinessProbe:
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 60
  periodSeconds: 5
  timeoutSeconds: 10

# Additional environment variables on the output Deployment definition.
env: []
# - name: FOO
#   value: bar

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}
tolerations: []
affinity: {}

db:
  persistence:
    size: 100Mi
    storageClass: ""
    accessModes: [ReadWriteOnce]

  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: mongo
    # Overrides the image tag whose default is the chart appVersion.
    tag: 7.0.5@sha256:fcde2d71bf00b592c9cabab1d7d01defde37d69b3d788c53c3bc7431b6b15de8
    # This sets the pull policy for images.
    pullPolicy: Always

  # This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    privileged: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: [ALL]

  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 1Gi

  # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe: &dbProbe
    exec:
      command:
        - mongosh
        - --eval
        - 'db.runCommand("ping").ok'
        - --quiet
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 15
  readinessProbe:
    <<: *dbProbe
    initialDelaySeconds: 30

  # Additional environment variables on the output StatefulSet definition.
  env: []
  # - name: FOO
  #   value: bar

  # Additional volumes on the output StatefulSet definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output StatefulSet definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}
  tolerations: []
  affinity: {}
