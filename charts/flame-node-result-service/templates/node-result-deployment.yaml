apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-node-result-deployment
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-node-result
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ .Release.Name }}-node-result
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: results-service
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8080
              name: http-result-srv
          volumeMounts:
            - name: crypto
              mountPath: /etc/crypto
              readOnly: true
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          env:
            - name: CRYPTO__PROVIDER
              value: file
            - name:  CRYPTO__ECDH_PRIVATE_KEY_PATH
              value: /etc/crypto/private_key.pem
            - name: UVICORN_LOG_LEVEL
              value: debug
              ## TODO: make dynamic forom env
            - name: POSTGRES__HOST
              value: flame-node-result-service-postgresql
            - name: POSTGRES__DB
              value: postgres_db
              ## TODO: add _helpers.tpl in case we want to use secret instead for postgres user/pwd
            - name: POSTGRES__USER
              value: postgres
            - name: POSTGRES__PASSWORD
              value: postgres
            - name: MINIO__ENDPOINT
              value: {{ .Release.Name }}-minio:9000
              ## TODO: add _helpers.tpl in case we want to use secret instead for minio user/pwd
            - name: MINIO__ACCESS_KEY
              value: {{ required "MinIO user must be set." .Values.minio.rootUser | quote }}
            - name: MINIO__SECRET_KEY
              value: {{ required "MinIO password must be set." .Values.minio.rootPassword | quote }}
            - name: MINIO__USE_SSL
              value: {{ .Values.env.MINIO_USE_SSL | default false | quote }}
            - name: MINIO__BUCKET
              value: {{ required "MinIO bucket must be set." .Values.env.MINIO_BUCKET | quote }}
            - name: HUB__AUTH_METHOD
              value: "robot"
            - name: HUB__ROBOT_AUTH__ID
              value: {{ required "Hub robot id must be set." (include "results.hub.robotUser" .)  | quote }}
            - name: HUB__ROBOT_AUTH__SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "results.hub.secretName" . }}
                  key: "robotSecret"
            - name: HUB__AUTH_BASE_URL
              value: {{ (include "results.hub.authApi" .) | default "https://auth.privateaim.dev" | quote }}
            - name: HUB__CORE_BASE_URL
              value: {{ (include "results.hub.coreApi" .) | default "https://core.privateaim.dev" | quote }}
            - name: HUB__STORAGE_BASE_URL
              value: {{ (include "results.hub.storageApi" .) | default "https://storage.privateaim.dev" | quote }}
            - name: OIDC__CERTS_URL
              value: {{ include "results.keycloak.endpoint" . }}
            - name: OIDC__CLIENT_ID_CLAIM_NAME
              value: {{ .Values.env.OIDC_CLIENT_ID_CLAIM_NAME }}
            # Change this to "1" for testing purposes. This will cause the value of OIDC__CERTS_URL to be
            # ignored. You will still need to set this variable for the service to start up correctly.
            - name: OIDC__SKIP_JWT_VALIDATION
              value: "0"
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: crypto
          secret:
            secretName: ecdh-private-key-secret
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
